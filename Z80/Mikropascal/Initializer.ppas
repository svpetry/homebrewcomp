unit Initializer;

(******************************************************************************)
const
  init_data: array[0..231] of byte =
  (
  49, 255, 47, 195, 8, 0, 0, 0, 62, 1, 211, 0, 211, 7, 175, 211, 
  1, 211, 2, 211, 3, 211, 4, 62, 16, 211, 5, 62, 53, 211, 6, 33, 
  0, 16, 229, 62, 32, 245, 51, 46, 0, 229, 205, 167, 0, 241, 241, 51, 
  33, 69, 0, 229, 33, 0, 16, 229, 205, 131, 0, 241, 241, 175, 211, 7, 
  118, 33, 0, 0, 201, 90, 105, 108, 111, 103, 32, 90, 56, 52, 67, 48, 
  48, 50, 48, 80, 69, 67, 32, 67, 80, 85, 44, 32, 49, 51, 49, 46, 
  48, 55, 50, 32, 66, 121, 116, 101, 115, 32, 82, 65, 77, 46, 32, 76, 
  111, 97, 100, 105, 110, 103, 32, 98, 105, 111, 115, 46, 98, 105, 110, 46, 
  46, 46, 0, 221, 229, 221, 33, 0, 0, 221, 57, 221, 78, 4, 221, 70, 
  5, 221, 94, 6, 221, 86, 7, 26, 19, 2, 3, 183, 32, 249, 221, 110, 
  4, 221, 102, 5, 221, 225, 201, 221, 229, 221, 33, 0, 0, 221, 57, 245, 
  221, 126, 4, 221, 119, 254, 221, 126, 5, 221, 119, 255, 221, 78, 7, 221, 
  70, 8, 89, 80, 11, 123, 178, 40, 20, 221, 110, 254, 221, 102, 255, 221, 
  126, 6, 119, 221, 52, 254, 32, 3, 221, 52, 255, 24, 229, 221, 110, 4, 
  221, 102, 5, 221, 249, 221, 225, 201
  );

  init_size = 232;

(******************************************************************************)
procedure Initializer;
var
  addr_lo: byte;
  addr_hi: byte;
  index: word;
  dsize: word;

begin
  addr_lo := 0;
  addr_hi := 0;

  dsize := init_size;
  index := 0;

  LATA.0 := 0; // write to address bus
  TRISD := 0; // address bus = output
  TRISB := 0; // data bus = output

  while dsize > 0 do
  begin
    PORTB := init_data[index];

    if addr_lo = 0 then
    begin
      LATA.1 := 1;
      PORTD := addr_hi;
      LATA.1 := 0;
    end;
    PORTD := addr_lo;

    LATE.1 := 0;
    LATE.1 := 1;

    inc(addr_lo);
    if addr_lo = 0 then
      inc(addr_hi);

    inc(index);
    dec(dsize);
  end;

  TRISD := 255; // address bus = input
  TRISB := 255; // data bus = input
  LATA.0 := 1; // read from address bus

  Delay_ms(250);
  LATA.6 := 1; // release CPU reset line
  Delay_ms(200);
  LATA.6 := 0; // reset CPU
  Delay_10us;
end;
(******************************************************************************)
end.
