program Z80_Sound;

(*
 * SID Sound card
 * Clock: 50 MHz ext. = 12.5 MHz int.
 *
 * pin layout:
 * RA0-RA4: SID A0-A4
 * RE3: /RESET
 * RA5: SID /CS
 * RA6: LED
 * RC0-RC7: SID D0-D7
 * RB0-RB7: DATA0-DATA7
 *)

uses
  SoundUtils;

const
  TMR0H_Value = $EC; // values for 25 msec
  TMR0L_Value = $ED;

var
  Sustain: array[3] of byte; // duration of sustain in 20 msec.
  NotesV1: array[icNoteCount] of word;
  NotesV2: array[icNoteCount] of word;
  NotesV3: array[icNoteCount] of word;
  NoteCounts: array[3] of word;

  curr_stn: array[3] of byte;
  curr_period: array[3] of byte;
  curr_note: array[3] of word;
  play: byte;
  
(******************************************************************************)
procedure Interrupt;
begin
  // triggered every 25 msec
  TMR0H := TMR0H_Value;
  TMR0L := TMR0L_Value;

  if play = 1 then
  begin
  
  
  
    LATA.6 := 1 - LATA.6;
  end;

  INTCON.TMR0IF := 0;
end;
(******************************************************************************)
procedure Init;
begin
//  OSCCON := %01120000;

  ADCON0 := 0; // disable A/D Converter
  ADCON1 := $0f;
  CMCON := $07; // disable comparator

  INTCON := %10100000; // Enable Timer0 interrupt
  PIE1 := 0;
  PIE2 := 0;
  RCON := 0;
  CCP1CON := 0;
  SSPCON1 := 0;
  SSPCON2 := 0;
  T0CON := %00000101; // Timer0: prescaler 64, 16 bit, disabled
  TMR0H := TMR0H_Value;
  TMR0L := TMR0L_Value;

  TRISA := 0;
  PORTA := %00100000;
  TRISB := 255;
  PORTB := 0;
  TRISC := 0;
  PORTC := 0;
end;
(******************************************************************************)
procedure InitSID;
begin
  SetVolume($0f);
end;
(******************************************************************************)
procedure ExecuteCommand(var _cmd: string[8]);
begin

end;
(******************************************************************************)
procedure TestSID;
begin
  SetWaveForm(0, icWaveTriangle);

  SetPulseWidth(0, 1024);

  SetAtkDcy(0, $15);
  SetStnRls(0, $44);

  while true do
  begin
    PlayNote(0, 4387);
    Delay_ms(200);
    StopNote(0);
    Delay_ms(200);
    
    PlayNote(0, 4927);
    Delay_ms(200);
    StopNote(0);
    Delay_ms(200);

    PlayNote(0, 5530);
    Delay_ms(200);
    StopNote(0);
    Delay_ms(200);

    PlayNote(0, 5859);
    Delay_ms(200);
    StopNote(0);
    Delay_ms(200);

    PlayNote(0, 6577);
    Delay_ms(200);
    StopNote(0);
    Delay_ms(200);

    PlayNote(0, 7382);
    Delay_ms(200);
    StopNote(0);
    Delay_ms(200);

    PlayNote(0, 8286);
    Delay_ms(200);
    StopNote(0);
    Delay_ms(200);

    PlayNote(0, 8779);
    Delay_ms(200);
    StopNote(0);
    Delay_ms(200);

  end;
end;
(******************************************************************************)
var
  cmd: string[8];
  i: byte;
  ch: byte;

begin
  Init;
  
  Delay_ms(50);

  InitSID;
  T0CON.TMR0ON := 1; // Enable Timer0

//  TestSID;

  while true do
  begin
    i := 0;
    repeat
      while PORTB.7 = 0 do
        nop;
      ch := PORTB or %01111111;
      cmd[i] := ch;
      inc(i);
      while PORTB.7 = 1 do
        nop;
    until ch = 0;
    ExecuteCommand(cmd);
  end;
end.
